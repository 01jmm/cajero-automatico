/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;
/**
 * Esta clase es una ventana para cambiar la comtraseña del cliente o usuario .
 * @author Joel Mauricio Mamani Mamani.
 */
public class CambioContrasena extends javax.swing.JFrame {
     /**
      * Variable para guardar el nombre del usuario en toda la clase
      */
    public String usuario = "";
   /**
     * Objeto que representa la clase Principal del sistema.
     * En este objeto se guardan los distinas datos delas cuentas y clientes .
     * Este objeto es el que se guarda en el fichero y tambien se lee del fichero si se lo nesesita.
     */
    Principal principal = new Principal ();
    /**
     * Crea una nueva ventana para el  Cambio Contrasena 
     */
    public CambioContrasena() {
        initComponents();
        setLocationRelativeTo(null);
    }
    /**
     * Crea una nueva ventana para el  Cambio Contrasena en el idioma .
     * Este metodo aparte de crear la ventana tanbien carga los datos
     * y cambia o actualiza el usuario de toda la interfas.
     * @param name Es el nombre de  usuario del cliente que entro al cajero. 
     */
    public CambioContrasena(String name) {
        initComponents();
        cargar();
        this.usuario=name;
        
    }
    /**
      * Este método se encarga de leer los datos del fichero para pasarlos  ala clase.
      * El metodo tambien tiene diferentes exepciones donde si no encuentra el fichero crea uno nuevo .
      */
    
    public void cargar (){
       
       FileInputStream archivo = null; // variable para leer datos de un arcchivo txt 
        ObjectInputStream convertidorarchivo = null;// variable que permitira en este caso sacar datos del archivo txt 

        try {
            archivo = new FileInputStream("C://Metodos//Cajero.txt");//llama al constructor que permite leer el archivo donde le pasamos la unbicacion del archivo 
            convertidorarchivo = new ObjectInputStream(archivo);// llamamos al constructor que permitira sacar datos del archivo donde le pasamos el archivo de donde queremos sacar los datos
               
                principal= (Principal)convertidorarchivo.readObject(); //agregamos ala lista el objeto que sacamos del archivo txt 
             
        }catch (IOException ex){// excepcion que nos ayuda si no encuentra el archivo 
          
            File archivos = new File ("C://Metodos//Cajero.txt"); // SI NO ENCUENTRA EL ARCHIVO SE CREARA UN NUEVO ARCHIVO 
        }catch (ClassNotFoundException cnfe)//ndica que Java no puede encontrar una clase específica en tiempo de ejecución, lo que generalmente ocurre debido a problemas como errores en el nombre de la clase
                {
                    cnfe.printStackTrace();
                }
       
       
       
       }

     /**
      * Este método se encarga de actualizar los datos del  fichero .
      * El metodo tambien tiene diferentes exepciones donde si no encuentra el fichero te dara los errores en una pila .
      */

     private void actualizarLista() {
        try {
           
            FileOutputStream ficherosalida =new FileOutputStream ("C://Metodos//Cajero.txt") ; 
            ObjectOutputStream  convertidor = new ObjectOutputStream (ficherosalida);
            
                convertidor.writeObject(principal);
            
            convertidor.close();
            ficherosalida.close();
        }catch (IOException ex){
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtContraseñaActual = new javax.swing.JTextField();
        txtContraseñaNueva = new javax.swing.JTextField();
        txtContraseñaNuevaRepetida = new javax.swing.JTextField();
        btnListo = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("REPITA CONTRASEÑA");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, -1, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CAMBIO DE CONTRASEÑA ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, -1, 42));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("NUEVA CONTRASEÑA  ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, -1, 30));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("CONTRASEÑA ACTUAL");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, 30));

        txtContraseñaActual.setBackground(new java.awt.Color(0, 51, 51));
        txtContraseñaActual.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtContraseñaActual.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtContraseñaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 150, 283, 30));

        txtContraseñaNueva.setBackground(new java.awt.Color(0, 51, 51));
        txtContraseñaNueva.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtContraseñaNueva.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtContraseñaNueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 283, 30));

        txtContraseñaNuevaRepetida.setBackground(new java.awt.Color(0, 51, 51));
        txtContraseñaNuevaRepetida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtContraseñaNuevaRepetida.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtContraseñaNuevaRepetida, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 250, 283, 30));

        btnListo.setBackground(new java.awt.Color(0, 51, 51));
        btnListo.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnListo.setForeground(new java.awt.Color(255, 255, 255));
        btnListo.setText("LISTO");
        btnListo.setAutoscrolls(true);
        btnListo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListoActionPerformed(evt);
            }
        });
        jPanel1.add(btnListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, -1, -1));

        btnRegresar.setBackground(new java.awt.Color(0, 51, 51));
        btnRegresar.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnRegresar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegresar.setText("REGRESAR ");
        btnRegresar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("X");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngwing.com (4).png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-270, 0, -1, 450));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logf1nuevo.jpg"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 410, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/f3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 670, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Maneja el evento de acción cuando se hace clic en el boton "Listo".
     * Este metodo verifica si los datos ingresados en las  contraseña actuales y nuevas son validos
     * y si son validos te redirige a otra ventana llamada cuentas.
     * @param evt El evento de accion que desencadena esta operacion.
     */
    private void btnListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListoActionPerformed
        if (verificarContraseñaActual(txtContraseñaActual.getText())){
            if (verificarContraseñaNueva(txtContraseñaNueva.getText(),txtContraseñaNuevaRepetida.getText())){
                cambiarcontraseña( txtContraseñaNueva.getText());
                JOptionPane.showMessageDialog(null, "Contraseña modificada con exito.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                Cuentas ventana = new Cuentas (usuario);
                ventana.setVisible(true);
                ventana.setLocationRelativeTo(null);
                dispose();
            }else{
                JOptionPane.showMessageDialog(null, "Las contraseñas no coinciden. Por favor, asegúrate de ingresar la misma contraseña en ambos campos.", "Error", JOptionPane.INFORMATION_MESSAGE);
            }

        }else {
            JOptionPane.showMessageDialog(null, "Contraseña actual erronea ", "Error", JOptionPane.INFORMATION_MESSAGE);

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnListoActionPerformed
    /**
     * El método cambia la contraseña de la cuenta del usuario.
     * El método busca en la lista de clientes con que cliente se asocia el nombre de usuario
     * de la interfas una ves encontrado le cambia la contraseña .
     * @param contraseña la nueva contraseña .
     */
    public void cambiarcontraseña(String contraseña){
        for (int i = 0 ;principal.getListaCliente().size()>i;i++){
            if(principal.getListaCliente().get(i).getUsuario().equals(usuario)){
                    principal.getListaCliente().get(i).setContraseña(contraseña);
                    
                
                }
    
    
    }
        
    }
       /**
        * El método verifica si las dos veses que te pide que ingreses la contraseña nueva 
        * son iguales.
        * @param contraseña1 Primera contraseña nueva ingresada .
        * @param contraseña2 Segunda contraseña nueva ingresada.
        * @return Devuelve true si son iguales .
        */ 
    public boolean verificarContraseñaNueva(String contraseña1,String contraseña2){
        boolean res = false;
        if(contraseña1.equals(contraseña2)){}
                res =true;
        
        
        return res;
    
    
    }
    /**
     * El método verifica si la contraseña actual ingresada es valida .
     * @param contraseña Contraseña actual ingresada.
     * @return Devuelve true si la contraseña es valida.
     */
    public boolean verificarContraseñaActual(String contraseña){
            boolean res = false;
            for(int i =0; principal.getListaCliente().size()>i;i++){
                if(principal.getListaCliente().get(i).getUsuario().equals(usuario)){
                    if (principal.getListaCliente().get(i).getContraseña().equals(contraseña)){
                        res = true;
                        break;
                    }
                
                }
            
            }
    
    return res;
    
    }
    /**
     * Maneja el evento de acción cuando se hace clic en el boton "Regresar".
     * Este metodo te redirige ala ventana Cuentas y cierra la ventana actual.
     * @param evt El evento de accion que desencadena esta operacion.
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        Cuentas ventana = new Cuentas (usuario);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegresarActionPerformed
    /**
     * Maneja el evento de acción cuando se hace clic en el boton "X"
     * El método cierra la ventana.
     * @param evt 
     */
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CambioContrasena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CambioContrasena().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListo;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtContraseñaActual;
    private javax.swing.JTextField txtContraseñaNueva;
    private javax.swing.JTextField txtContraseñaNuevaRepetida;
    // End of variables declaration//GEN-END:variables
}
