/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
/**
 * Esta clase crea una venta para hacer el deposito ala cuenta.
 * @author Joel Mauricio Mamani Mamani
 */
public class Deposito2Ingles extends javax.swing.JFrame {

        /** guarda el numero de cuenta para que toda la clase lo pueda usar*/

    public int numeroCuenta=000;
        /** Este objeto es el que se guarda en el fichero y tambien se lee del fichero si se lo nesesita*/

     public Principal principal = new Principal();
          /**  variable para saber si el deposito se va aser en dolares*/

     public boolean dolares = false;
          /**variable para saber si el deposito se ca hacer en bolivianos*/

     public boolean bolivianos=false;
         /** Variable para guardar el nombre del usuario en toda la clase*/

     public String usuario = "null";
     /**
      * crea una ventana del tipo Deposito2 en el idioma ingles.
      */
    public Deposito2Ingles() {
        initComponents();
        setLocationRelativeTo(null);
    }
    /**
     * crea una nueva ventana del tipo deposito2 en el idioma ingles.
     * Este constructor cambiara los atributos de la clase como el usuario , numero de cuenta
     * y el tipo de  moneda que se va depositar.
     * @param name nuevo nombre de usuario para la clase.
     * @param numerocuent nuevo numero de cuenta para la clase.
     * @param dolar para saber si el deposito sera en dolares (si es true sera en dolares).
     * @param boliviano para saber si el deposito sera en bolivianos  (si es true sera en bolivianos).
     */
    public Deposito2Ingles(String name,int numerocuent,boolean dolar,boolean boliviano){
        initComponents();
        this.usuario=name;
        this.bolivianos=boliviano;
        this.dolares=dolar;
        this.numeroCuenta=numerocuent;
        cargar();
    
    }
    /**
      * Este método se encarga de leer los datos del fichero para pasarlos  ala clase.
      * El metodo tambien tiene diferentes exepciones donde si no encuentra el fichero crea uno nuevo .
      */
     public void cargar (){
       
       FileInputStream archivo = null; // variable para leer datos de un arcchivo txt 
        ObjectInputStream convertidorarchivo = null;// variable que permitira en este caso sacar datos del archivo txt 

        try {
            archivo = new FileInputStream("C://Metodos//Cajero.txt");//llama al constructor que permite leer el archivo donde le pasamos la unbicacion del archivo 
            convertidorarchivo = new ObjectInputStream(archivo);// llamamos al constructor que permitira sacar datos del archivo donde le pasamos el archivo de donde queremos sacar los datos
               
                principal= (Principal)convertidorarchivo.readObject(); //agregamos ala lista el objeto que sacamos del archivo txt 
             
        }catch (IOException ex){// excepcion que nos ayuda si no encuentra el archivo 
          
            File archivos = new File ("C://Metodos//Cajero.txt"); // SI NO ENCUENTRA EL ARCHIVO SE CREARA UN NUEVO ARCHIVO 
        }catch (ClassNotFoundException cnfe)//ndica que Java no puede encontrar una clase específica en tiempo de ejecución, lo que generalmente ocurre debido a problemas como errores en el nombre de la clase
                {
                    cnfe.printStackTrace();
                }
       
       
       
       }
     /**
      * Este método se encarga de actualizar los datos del  fichero .
      * El metodo tambien tiene diferentes exepciones donde si no encuentra el fichero te dara los errores en una pila .
      */
     private void actualizarLista() {
        try {
           
            FileOutputStream ficherosalida =new FileOutputStream ("C://Metodos//Cajero.txt") ; 
            ObjectOutputStream  convertidor = new ObjectOutputStream (ficherosalida);
            
                convertidor.writeObject(principal);
            
            convertidor.close();
            ficherosalida.close();
        }catch (IOException ex){
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        txtDeposito = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("INCOME");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 90, 30));

        jButton7.setBackground(new java.awt.Color(0, 51, 51));
        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("CONTINUE TO ");
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, -1, -1));

        txtDeposito.setBackground(new java.awt.Color(0, 51, 51));
        txtDeposito.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtDeposito.setForeground(new java.awt.Color(255, 255, 255));
        txtDeposito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDepositoKeyTyped(evt);
            }
        });
        jPanel1.add(txtDeposito, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 250, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DEPOSITS SECTION");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 51, 51));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("RETURN TO");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logf1nuevo.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pngwing.com (4).png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-290, 0, -1, 410));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/f3.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (dolares ){
            if(verificarDolar()){//verificar si la cuenta esta en dolares
                aumentarSaldo(Integer.parseInt(txtDeposito.getText()));
                Historia(txtDeposito.getText());//aumentar el saldo

            }else{
                aumentarSaldo(Integer.parseInt(txtDeposito.getText()) *( 6.91));//estamos asiendo la conversion con el dolar a 6.91
                Historia(redondear(Integer.parseInt(txtDeposito.getText()) *( 6.91))+"");

            }

        }else if(bolivianos) {
            if (verificarDolar()){
                aumentarSaldo(Integer.parseInt(txtDeposito.getText())/6.91);//dividimos el monto en 6.91 porque la cuenta esta en bolibvianos
                Historia(redondear(Integer.parseInt(txtDeposito.getText())/6.91)+"");
            }else {
                
                aumentarSaldo(Integer.parseInt(txtDeposito.getText()));//aumentar el saldo
                Historia((txtDeposito.getText())+"");
            }

        }
        actualizarLista();

        FinishIngles ventana = new FinishIngles (usuario,numeroCuenta);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        FacturaIngles factura = new FacturaIngles(usuario,numeroCuenta,"Deposito",Double.parseDouble(txtDeposito.getText()));
        factura.setVisible(true);
        factura.setLocationRelativeTo(null);

        dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txtDepositoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepositoKeyTyped
        char c = evt.getKeyChar();
        if( c < '0'|| c>'9'  ) evt.consume();
        if (txtDeposito.getText().length() >= 4) evt.consume();        // TODO add your handling code here:
    }//GEN-LAST:event_txtDepositoKeyTyped
    /**
     * El método se encarga de redondear el numero a tener solo 3 decimales.
     * @param numero numero a redondear.
     * @return numero ya redondeado.
     */ 
    public double redondear(double numero) {
        // Multiplica el número por 10^digitos para desplazar los dígitos decimales
        double factor = Math.pow(10, 3);
        double numeroMultiplicado = numero * factor;

        // Redondea al entero más cercano
        long parteEntera = Math.round(numeroMultiplicado);

        // Divide el resultado por 10^digitos para obtener el número redondeado
        return parteEntera / factor;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MenuIngles ventana = new MenuIngles (usuario, numeroCuenta);
        ventana.setVisible(true);
        ventana.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * El método agrega la historia ala lista de historias de la cuenta.  
     * @param monto monto que se deposito.
     */
    public void Historia(String monto){
        LocalDateTime ahora = LocalDateTime.now();
                         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                         String fechaYHoraActual = ahora.format(formatter);
        
                        
                       Historia historia = new Historia (fechaYHoraActual,"Deposito","+"+monto,null,000000,redondear(saldo(numeroCuenta))+"");
                       agregarHistoria(historia);
    
    
    
    }
    /**
     * El método se encarga de buscar el saldo de la cuenta .
     * @param numerocuenta numero de cuenta ala cual se busca el saldo.
     * @return saldo de la cuenta dada.
     */
    public double saldo(int numerocuenta){
        double  res = 0;
        if(principal.getListaCuenta()!=null){
        for(int i =0;principal.getListaCuenta().size()>i ;i++ ){
            if (principal.getListaCuenta().get(i).getNumeroCuenta()==numerocuenta){
                 
                res = principal.getListaCuenta().get(i).getSaldo();
                 break;
            
            }
         
        }
        }
        
     
        return res;
    
    }
    /**
      * El método agrega la historia del deposito ala lista de historias de la cuenta.
      * @param historia historia a guardar.
      */
    public void agregarHistoria(Historia historia){
        for(int i= 0 ; principal.getListaCuenta().size()>i;i++){
            if(principal.getListaCuenta().get(i).getNumeroCuenta()==numeroCuenta){//receptor
               
                        principal.getListaCuenta().get(i).getListaHistoria().add(historia);
                        
                        break;
                      
            }
        
        
        }
    
    
    }
    /**
     * El método verifica si la interfas esta en deposito en dolares.
     * @return devuelve true si la interfas esta en dolares.
     */
    public boolean verificarDolar(){
        boolean res =false;
        for (int i =0; principal.getListaCuenta().size()>i;i++){
            if(principal.getListaCuenta().get(i).getNumeroCuenta()==numeroCuenta){
                if(principal.getListaCuenta().get(i).getMoneda().equals("Dolares")){
                    res = true;
                    break;
                }
            
            }
        
        }
        return res;
    
    
    }
    /**
     * El método aumenta el saldo que se deposito ala cuenta.
     * @param saldoDepositado  saldo a aumentar ala cuenta.
     */
    public void aumentarSaldo (double saldoDepositado){
    
        for (int i =0; principal.getListaCuenta().size()>i;i++){
            if(principal.getListaCuenta().get(i).getNumeroCuenta()==numeroCuenta){
                principal.getListaCuenta().get(i).setSaldo(principal.getListaCuenta().get(i).getSaldo () + saldoDepositado);
                    
                    break;
                
            
            }
        
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deposito2Ingles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deposito2Ingles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deposito2Ingles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deposito2Ingles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deposito2Ingles().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDeposito;
    // End of variables declaration//GEN-END:variables
}
